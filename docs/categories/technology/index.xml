<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Technology on あらゆる現実のはなし</title>
    <link>https://yukara-ikemiya.github.io/arayuru-genjitu-blog/categories/technology/</link>
    <description>Recent content in Technology on あらゆる現実のはなし</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Sun, 24 Dec 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://yukara-ikemiya.github.io/arayuru-genjitu-blog/categories/technology/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Suno AI の作り方 (技術者の観点から)</title>
      <link>https://yukara-ikemiya.github.io/arayuru-genjitu-blog/post/20231224/</link>
      <pubDate>Sun, 24 Dec 2023 00:00:00 +0000</pubDate>
      
      <guid>https://yukara-ikemiya.github.io/arayuru-genjitu-blog/post/20231224/</guid>
      <description>日本音響学会 学生・若手フォーラム Advent Calendar 2023 24日目 Suno AI とは、歌詞と曲のスタイル（と曲名）を指定するだけで、自動で歌詞入りの楽曲を作成してくれる生</description>
    </item>
    
    <item>
      <title>Best Practices for Multi-Node Training on ABCI with PyTorch</title>
      <link>https://yukara-ikemiya.github.io/arayuru-genjitu-blog/post/20231217/</link>
      <pubDate>Sun, 17 Dec 2023 00:00:00 +0000</pubDate>
      
      <guid>https://yukara-ikemiya.github.io/arayuru-genjitu-blog/post/20231217/</guid>
      <description>This article summarizes a simple method for conducting distributed training with ABCI which is the GPU cloud computing service by AIST. The following repository provides a simple example of training codes on ABCI with support for multi-node training.
https://github.com/yukara-ikemiya/abci-code-sample
Let&amp;rsquo;s use ABCI for training large-scale models  AI Bridging Cloud Infrastructure (ABCI) is the world&amp;rsquo;s first large-scale Open AI Computing Infrastructure, constructed and operated by National Institute of Advanced Industrial Science and Technology (AIST).</description>
    </item>
    
    <item>
      <title>お絵描きAIの中では何をしているか？</title>
      <link>https://yukara-ikemiya.github.io/arayuru-genjitu-blog/post/20220918/</link>
      <pubDate>Sun, 18 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yukara-ikemiya.github.io/arayuru-genjitu-blog/post/20220918/</guid>
      <description>本記事は、一般的なお絵描きAIの仕組みを非エンジニア向けに説明したものです。 これから様々な生成系AIが出てくる中で、技術的な仕組みを直観的に</description>
    </item>
    
    <item>
      <title>DIYで作る賃貸向けホームシアター</title>
      <link>https://yukara-ikemiya.github.io/arayuru-genjitu-blog/post/20211206/</link>
      <pubDate>Mon, 06 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yukara-ikemiya.github.io/arayuru-genjitu-blog/post/20211206/</guid>
      <description>本記事は「壁 Advent Calendar 2021」6日目の記事です。 ホームシアターのすすめ 人は壁があると何かを設置したくなる生き物ですが、特に男女問わず圧倒的な人気</description>
    </item>
    
    <item>
      <title>Docker で任意のユーザに環境変数を追加する</title>
      <link>https://yukara-ikemiya.github.io/arayuru-genjitu-blog/post/20200123/</link>
      <pubDate>Thu, 23 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yukara-ikemiya.github.io/arayuru-genjitu-blog/post/20200123/</guid>
      <description>やりたいこと Docker イメージを作るときに C++ ライブラリとか色々いれますが、 実際に（コンテナ内で）使おうとするとヘッダーファイルにパスが通っていなくて</description>
    </item>
    
    <item>
      <title>一人暮らしで始めるホームシアター</title>
      <link>https://yukara-ikemiya.github.io/arayuru-genjitu-blog/post/20191216/</link>
      <pubDate>Sat, 21 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://yukara-ikemiya.github.io/arayuru-genjitu-blog/post/20191216/</guid>
      <description>ホームシアターのすすめ ホームシアターって知っていますか？ ホーム（家）のシアター（映画館）です。 でっかい画面で映画とかゲーム楽しめたら最高です</description>
    </item>
    
  </channel>
</rss>
